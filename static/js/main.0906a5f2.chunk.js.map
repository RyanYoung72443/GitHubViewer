{"version":3,"sources":["Components/Profile.js","Components/Search.js","Github.js","Components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Profile","userInfo","this","props","userData","followers","concat","homeURL","following","repos","notFound","react_default","a","createElement","className","href","target","rel","title","name","username","src","avatar","alt","location","Component","Search","event","preventDefault","value","refs","searchProfile","onSubmit","submitForm","bind","type","ref","placeholder","Github","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","finalURL","fetch","then","res","json","data","setState","login","avatar_url","public_repos","html_url","message","catch","error","console","log","getProfile","id","Search_Search","Profile_Profile","Header","onLogin","onLogout","page","accessToken","Nav","Link","style","color","onClick","Navbar","bsStyle","background","Brand","App","profile","lock","Auth0Lock","clientID","domain","on","authResult","setProfile","localStorage","setItem","JSON","stringify","getItem","parse","_this3","show","removeItem","Github_Github","Header_Header","logout","showLock","defaultProps","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0906a5f2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n//userInfo\n\nexport default class Profile extends Component {\n  render() {\n    let userInfo = this.props.userData;\n    let followers = `${userInfo.homeURL}/followers`;\n    let following = `${userInfo.homeURL}/following`;\n    let repos = `${userInfo.homeURL}/repositories`;\n\n    if (userInfo.notFound === \"Not Found\") {\n      return (\n        <div className='notfound'>\n          <h2>Hi</h2>\n          <p>Sorry about that but user was not found.</p>\n        </div>\n      );\n    } else {\n      return (\n        <section className='github-profile'>\n          <div className='github-profile-info'>\n            <a\n              href={userInfo.homeURL}\n              target='_blank'\n              rel='noopener noreferrer'\n              title={userInfo.name || userInfo.username}\n            >\n              <img src={userInfo.avatar} alt={userInfo.avatar} />\n            </a>\n            <h2>\n              <a\n                href={userInfo.homeURL}\n                target='_blank'\n                rel='noopener noreferrer'\n              >\n                {userInfo.name || userInfo.username}\n              </a>\n            </h2>\n            <h3>{userInfo.location}</h3>\n          </div>\n          <div className='github-profile-state'>\n            <ul>\n              <li>\n                <a\n                  href={followers}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                  title='Number Of Followers'\n                >\n                  <i>{userInfo.followers}</i>\n                  <span>Followers</span>\n                </a>\n              </li>\n              <li>\n                <a\n                  href={repos}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                  title='Number Of Repositoriy'\n                >\n                  <i>{userInfo.repos}</i>\n                  <span>Repositoriy</span>\n                </a>\n              </li>\n              <li>\n                <a\n                  href={following}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                  title='Number Of Following'\n                >\n                  <i>{userInfo.following}</i>\n                  <span>Following</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </section>\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Search extends Component {\n  submitForm(event) {\n    event.preventDefault();\n    let value = this.refs.username.value;\n    this.props.searchProfile(value);\n    this.refs.username.value = \"\";\n  }\n\n  render() {\n    return (\n      <div className='search-box'>\n        <form onSubmit={this.submitForm.bind(this)}>\n          <label>\n            <input type='search' ref='username' placeholder='enter username' />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Profile from \"./Components/Profile\";\nimport Search from \"./Components/Search\";\n\nconst API = \"https://api.github.com/users\";\nexport default class Github extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"ShawnYoung72443\",\n      name: \"\",\n      avatar: \"\",\n      repos: \"\",\n      followers: \"\",\n      following: \"\",\n      homeURL: \"\",\n      location: \"\",\n      notFound: \"\"\n    };\n  }\n\n  getProfile(username) {\n    let finalURL = `${API}/${username}`;\n\n    fetch(finalURL)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          username: data.login,\n          name: data.name,\n          avatar: data.avatar_url,\n          repos: data.public_repos,\n          followers: data.followers,\n          following: data.following,\n          homeURL: data.html_url,\n          location: data.location,\n          notFound: data.message\n        });\n      })\n      .catch(error => console.log(\"There was a problem in fetching data.\"));\n  }\n\n  componentDidMount() {\n    this.getProfile(this.state.username);\n  }\n\n  render() {\n    return (\n      <div>\n        <section id='card'>\n          <Search searchProfile={this.getProfile.bind(this)} />\n          <Profile userData={this.state} />\n        </section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nexport default class Header extends Component {\n  onLogin() {\n    this.props.onLogin();\n  }\n\n  onLogout() {\n    this.props.onLogout();\n  }\n\n  render() {\n    let page;\n    if (this.props.accessToken) {\n      page = (\n        <Nav.Link\n          style={{ color: \"#e6ebed\" }}\n          onClick={this.onLogout.bind(this)}\n          href='#'\n        >\n          Logout\n        </Nav.Link>\n      );\n    } else {\n      page = (\n        <Nav.Link\n          style={{ color: \"#e6ebed\" }}\n          onClick={this.onLogin.bind(this)}\n          href='#'\n        >\n          Login\n        </Nav.Link>\n      );\n    }\n\n    return (\n      <div>\n        <Navbar bsStyle='default' style={{ background: \"rgba(0, 0, 0, 0.8)\" }}>\n          <Navbar.Brand style={{ color: \"#fefefe\" }}>\n            Github Searcher\n          </Navbar.Brand>\n          <Nav>{page}</Nav>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Github from \"./Github\";\nimport Header from \"./Components/Header\";\nimport Auth0Lock from \"auth0-lock\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accessToken: \"\",\n      profile: {}\n    };\n  }\n\n  static defaultProps = {\n    clientID: \"fIV3Y3Bh285XqBf9cbDqmgOqoTWDvjkY\",\n    domain: \"dev-a2test.auth0.com\"\n  };\n\n  componentWillMount() {\n    this.lock = new Auth0Lock(this.props.clientID, this.props.domain);\n\n    this.lock.on(\"authenticated\", authResult => {\n      // console.log(authResult);\n\n      this.lock.getProfile(authResult.accessToken, (error, profile) => {\n        if (error) {\n          console.log(error);\n          return;\n        }\n        // console.log(profile);\n\n        this.setProfile(authResult.accessToken, profile);\n      });\n    });\n    this.getProfile();\n  }\n\n  setProfile(accessToken, profile) {\n    localStorage.setItem(\"accessToken\", accessToken);\n    localStorage.setItem(\"profile\", JSON.stringify(profile));\n\n    this.setState({\n      accessToken: localStorage.getItem(\"accessToken\"),\n      profile: JSON.parse(localStorage.getItem(\"profile\"))\n    });\n  }\n\n  getProfile() {\n    if (localStorage.getItem(\"accessToken\") != null) {\n      this.setState(\n        {\n          accessToken: localStorage.getItem(\"accessToken\"),\n          profile: JSON.parse(localStorage.getItem(\"profile\"))\n        },\n        () => {\n          console.log(this.state);\n        }\n      );\n    }\n  }\n\n  showLock() {\n    this.lock.show();\n  }\n\n  logout() {\n    this.setState(\n      {\n        accessToken: \"\",\n        profile: \"\"\n      },\n      () => {\n        localStorage.removeItem(\"accessToken\");\n        localStorage.removeItem(\"profile\");\n      }\n    );\n  }\n\n  render() {\n    let page;\n\n    if (this.state.accessToken) {\n      page = <Github />;\n    } else {\n      page = <h1 className='error'>Click on Login to search Github Viewer</h1>;\n    }\n\n    return (\n      <div className='App'>\n        <Header\n          lock={this.lock}\n          accessToken={this.state.accessToken}\n          onLogout={this.logout.bind(this)}\n          onLogin={this.showLock.bind(this)}\n        />\n        {page}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}